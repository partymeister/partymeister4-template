version: "3.8"
services:
  app:
    image: dfox288/partymeister-php-84-prod:1.0.0
    environment:
      APP_ENV: development
      APP_NAME: partymeister # do not change
      APP_URL: http://localhost # adjust to the real url (with https) before going live
      APP_URL_INTERNAL: http://nginx # used for internal communication between the containers. only change if the container name is changed as well
      APP_DEBUG: "true" # set to false for production
      APP_LOG_LEVEL: debug # can stay the same, logs will appear in /storage/logs

      DB_HOST: mysql # container name, do not change unless you change the container name for mysql as well
      DB_CONNECTION: mysql # type of database
      DB_PORT: 3306 # default port for mysql
      DB_DATABASE: partymeister
      DB_USERNAME: user # please change this
      DB_PASSWORD: password # please change this, also in the mysql container

      REDIS_HOST: redis # container name, do not change unless you change the container name for redis as well
      REDIS_PASSWORD: password # please change this, also in the redis container
      QUEUE_CONNECTION: redis
      REDIS_PORT: 6379
      SESSION_DRIVER: cookie

      PUSHER_APP_ID: 12345 # change if needed
      PUSHER_APP_KEY: 12345 # change if needed
      PUSHER_APP_SECRET: 12345 # change if needed
      PUSHER_HOST: localhost # this is for internal communication on the app container. do not change
      PUSHER_PATH: # do not change
      PUSHER_PORT: 6001 # do not change unless you also change the nginx configuration which maps this port to /socket
      PUSHER_SCHEME: http # actually not quite sure if this should stay the same or not...
      PUSHER_HOST_EXTERNAL: localhost # change this to APP_URL (without http/https)
      PUSHER_PATH_EXTERNAL: /socket # do not change unless you also change the nginx config
      PUSHER_PORT_EXTERNAL: 80 # change this to 443 if you use a ssl proxy
      PUSHER_SCHEME_EXTERNAL: http # change this to https if you use a ssl proxy
      DEBUGBAR_ENABLED: "false"

    restart: unless-stopped
    entrypoint:
      - /bin/sh
      - /var/www/entrypoint.sh

    working_dir: /var/www/
    volumes:
      - ../:/var/www
      - ./config/entrypoint.sh:/var/www/entrypoint.sh
      - ./config/php/custom_php.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./config/php/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
      - ./config/supervisor/supervisor.conf:/etc/supervisor/conf.d/supervisor.conf
    networks:
      - partymeister_network
    depends_on:
      - nginx
      - mysql
      - redis

  nginx:
    image: nginx:1.21
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ../:/var/www
      - ./config/nginx/partymeister.conf:/etc/nginx/conf.d/default.conf
    networks:
      - partymeister_network
    environment:
      VIRTUAL_HOST: exampleparty.partymeister.org
      LETSENCRYPT_HOST: exampleparty.partymeister.org
      LETSENCRYPT_EMAIL: d.fox@partymeister.org

  redis:
    image: wodby/redis:6
    environment:
      REDIS_PASSWORD: password # please change this, also in the app container
    networks:
      - partymeister_network

  mysql:
    image: mysql:8-oracle
    restart: always
    environment:
      MYSQL_DATABASE: partymeister
      MYSQL_USER: user # please change this
      MYSQL_PASSWORD: password # please change this, also in the app container
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - "3306:3306" # can be omitted unless you want mysql connections from the docker host
    networks:
      - partymeister_network

volumes:
  mysql:
    external: false
networks:
  partymeister_network:
    driver: bridge
